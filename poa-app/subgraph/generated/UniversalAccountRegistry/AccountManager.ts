// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class UserRegistered extends ethereum.Event {
  get params(): UserRegistered__Params {
    return new UserRegistered__Params(this);
  }
}

export class UserRegistered__Params {
  _event: UserRegistered;

  constructor(event: UserRegistered) {
    this._event = event;
  }

  get accountAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get username(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class UsernameChanged extends ethereum.Event {
  get params(): UsernameChanged__Params {
    return new UsernameChanged__Params(this);
  }
}

export class UsernameChanged__Params {
  _event: UsernameChanged;

  constructor(event: UsernameChanged) {
    this._event = event;
  }

  get accountAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newUsername(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class AccountManager extends ethereum.SmartContract {
  static bind(address: Address): AccountManager {
    return new AccountManager("AccountManager", address);
  }

  addressToUsername(param0: Address): string {
    let result = super.call(
      "addressToUsername",
      "addressToUsername(address):(string)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toString();
  }

  try_addressToUsername(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "addressToUsername",
      "addressToUsername(address):(string)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getUsername(accountAddress: Address): string {
    let result = super.call("getUsername", "getUsername(address):(string)", [
      ethereum.Value.fromAddress(accountAddress),
    ]);

    return result[0].toString();
  }

  try_getUsername(accountAddress: Address): ethereum.CallResult<string> {
    let result = super.tryCall("getUsername", "getUsername(address):(string)", [
      ethereum.Value.fromAddress(accountAddress),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ChangeUsernameCall extends ethereum.Call {
  get inputs(): ChangeUsernameCall__Inputs {
    return new ChangeUsernameCall__Inputs(this);
  }

  get outputs(): ChangeUsernameCall__Outputs {
    return new ChangeUsernameCall__Outputs(this);
  }
}

export class ChangeUsernameCall__Inputs {
  _call: ChangeUsernameCall;

  constructor(call: ChangeUsernameCall) {
    this._call = call;
  }

  get newUsername(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ChangeUsernameCall__Outputs {
  _call: ChangeUsernameCall;

  constructor(call: ChangeUsernameCall) {
    this._call = call;
  }
}

export class RegisterAccountCall extends ethereum.Call {
  get inputs(): RegisterAccountCall__Inputs {
    return new RegisterAccountCall__Inputs(this);
  }

  get outputs(): RegisterAccountCall__Outputs {
    return new RegisterAccountCall__Outputs(this);
  }
}

export class RegisterAccountCall__Inputs {
  _call: RegisterAccountCall;

  constructor(call: RegisterAccountCall) {
    this._call = call;
  }

  get username(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterAccountCall__Outputs {
  _call: RegisterAccountCall;

  constructor(call: RegisterAccountCall) {
    this._call = call;
  }
}

export class RegisterAccountQuickJoinCall extends ethereum.Call {
  get inputs(): RegisterAccountQuickJoinCall__Inputs {
    return new RegisterAccountQuickJoinCall__Inputs(this);
  }

  get outputs(): RegisterAccountQuickJoinCall__Outputs {
    return new RegisterAccountQuickJoinCall__Outputs(this);
  }
}

export class RegisterAccountQuickJoinCall__Inputs {
  _call: RegisterAccountQuickJoinCall;

  constructor(call: RegisterAccountQuickJoinCall) {
    this._call = call;
  }

  get username(): string {
    return this._call.inputValues[0].value.toString();
  }

  get newUser(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterAccountQuickJoinCall__Outputs {
  _call: RegisterAccountQuickJoinCall;

  constructor(call: RegisterAccountQuickJoinCall) {
    this._call = call;
  }
}
