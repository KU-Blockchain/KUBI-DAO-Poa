// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class QuickJoinDeployed extends ethereum.Event {
  get params(): QuickJoinDeployed__Params {
    return new QuickJoinDeployed__Params(this);
  }
}

export class QuickJoinDeployed__Params {
  _event: QuickJoinDeployed;

  constructor(event: QuickJoinDeployed) {
    this._event = event;
  }

  get quickJoinAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get POname(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class QuickJoinFactory extends ethereum.SmartContract {
  static bind(address: Address): QuickJoinFactory {
    return new QuickJoinFactory("QuickJoinFactory", address);
  }

  createQuickJoin(
    _membershipNFTAddress: Address,
    _directDemocracyTokenAddress: Address,
    _accountManagerAddress: Address,
    _POname: string,
    _masterDeployAddress: Address,
  ): Address {
    let result = super.call(
      "createQuickJoin",
      "createQuickJoin(address,address,address,string,address):(address)",
      [
        ethereum.Value.fromAddress(_membershipNFTAddress),
        ethereum.Value.fromAddress(_directDemocracyTokenAddress),
        ethereum.Value.fromAddress(_accountManagerAddress),
        ethereum.Value.fromString(_POname),
        ethereum.Value.fromAddress(_masterDeployAddress),
      ],
    );

    return result[0].toAddress();
  }

  try_createQuickJoin(
    _membershipNFTAddress: Address,
    _directDemocracyTokenAddress: Address,
    _accountManagerAddress: Address,
    _POname: string,
    _masterDeployAddress: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createQuickJoin",
      "createQuickJoin(address,address,address,string,address):(address)",
      [
        ethereum.Value.fromAddress(_membershipNFTAddress),
        ethereum.Value.fromAddress(_directDemocracyTokenAddress),
        ethereum.Value.fromAddress(_accountManagerAddress),
        ethereum.Value.fromString(_POname),
        ethereum.Value.fromAddress(_masterDeployAddress),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateQuickJoinCall extends ethereum.Call {
  get inputs(): CreateQuickJoinCall__Inputs {
    return new CreateQuickJoinCall__Inputs(this);
  }

  get outputs(): CreateQuickJoinCall__Outputs {
    return new CreateQuickJoinCall__Outputs(this);
  }
}

export class CreateQuickJoinCall__Inputs {
  _call: CreateQuickJoinCall;

  constructor(call: CreateQuickJoinCall) {
    this._call = call;
  }

  get _membershipNFTAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _directDemocracyTokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _accountManagerAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _POname(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _masterDeployAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class CreateQuickJoinCall__Outputs {
  _call: CreateQuickJoinCall;

  constructor(call: CreateQuickJoinCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
