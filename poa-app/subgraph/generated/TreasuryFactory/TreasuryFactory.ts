// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TreasuryCreated extends ethereum.Event {
  get params(): TreasuryCreated__Params {
    return new TreasuryCreated__Params(this);
  }
}

export class TreasuryCreated__Params {
  _event: TreasuryCreated;

  constructor(event: TreasuryCreated) {
    this._event = event;
  }

  get treasuryAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get POname(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class TreasuryFactory extends ethereum.SmartContract {
  static bind(address: Address): TreasuryFactory {
    return new TreasuryFactory("TreasuryFactory", address);
  }

  createTreasury(POname: string): Address {
    let result = super.call(
      "createTreasury",
      "createTreasury(string):(address)",
      [ethereum.Value.fromString(POname)]
    );

    return result[0].toAddress();
  }

  try_createTreasury(POname: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createTreasury",
      "createTreasury(string):(address)",
      [ethereum.Value.fromString(POname)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateTreasuryCall extends ethereum.Call {
  get inputs(): CreateTreasuryCall__Inputs {
    return new CreateTreasuryCall__Inputs(this);
  }

  get outputs(): CreateTreasuryCall__Outputs {
    return new CreateTreasuryCall__Outputs(this);
  }
}

export class CreateTreasuryCall__Inputs {
  _call: CreateTreasuryCall;

  constructor(call: CreateTreasuryCall) {
    this._call = call;
  }

  get POname(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreateTreasuryCall__Outputs {
  _call: CreateTreasuryCall;

  constructor(call: CreateTreasuryCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
