// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class VotingContractCreated extends ethereum.Event {
  get params(): VotingContractCreated__Params {
    return new VotingContractCreated__Params(this);
  }
}

export class VotingContractCreated__Params {
  _event: VotingContractCreated;

  constructor(event: VotingContractCreated) {
    this._event = event;
  }

  get votingAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get treasuryAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get POname(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class DirectDemocracyVotingFactory extends ethereum.SmartContract {
  static bind(address: Address): DirectDemocracyVotingFactory {
    return new DirectDemocracyVotingFactory(
      "DirectDemocracyVotingFactory",
      address
    );
  }

  deployedVotings(param0: BigInt): Address {
    let result = super.call(
      "deployedVotings",
      "deployedVotings(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_deployedVotings(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployedVotings",
      "deployedVotings(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDeployedVotings(): Array<Address> {
    let result = super.call(
      "getDeployedVotings",
      "getDeployedVotings():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getDeployedVotings(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getDeployedVotings",
      "getDeployedVotings():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class CreateDirectDemocracyVotingCall extends ethereum.Call {
  get inputs(): CreateDirectDemocracyVotingCall__Inputs {
    return new CreateDirectDemocracyVotingCall__Inputs(this);
  }

  get outputs(): CreateDirectDemocracyVotingCall__Outputs {
    return new CreateDirectDemocracyVotingCall__Outputs(this);
  }
}

export class CreateDirectDemocracyVotingCall__Inputs {
  _call: CreateDirectDemocracyVotingCall;

  constructor(call: CreateDirectDemocracyVotingCall) {
    this._call = call;
  }

  get _ddToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nftMembership(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _allowedRoleNames(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get _treasuryAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get POname(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class CreateDirectDemocracyVotingCall__Outputs {
  _call: CreateDirectDemocracyVotingCall;

  constructor(call: CreateDirectDemocracyVotingCall) {
    this._call = call;
  }
}
