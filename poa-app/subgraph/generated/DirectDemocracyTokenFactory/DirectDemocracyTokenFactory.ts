// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class TokenCreated extends ethereum.Event {
  get params(): TokenCreated__Params {
    return new TokenCreated__Params(this);
  }
}

export class TokenCreated__Params {
  _event: TokenCreated;

  constructor(event: TokenCreated) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[2].value.toString();
  }

  get allowedRoleNames(): Array<string> {
    return this._event.parameters[3].value.toStringArray();
  }

  get POname(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class DirectDemocracyTokenFactory extends ethereum.SmartContract {
  static bind(address: Address): DirectDemocracyTokenFactory {
    return new DirectDemocracyTokenFactory(
      "DirectDemocracyTokenFactory",
      address,
    );
  }

  createDirectDemocracyToken(
    name: string,
    symbol: string,
    _nftMembership: Address,
    _allowedRoleNames: Array<string>,
    _POname: string,
  ): Address {
    let result = super.call(
      "createDirectDemocracyToken",
      "createDirectDemocracyToken(string,string,address,string[],string):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(_nftMembership),
        ethereum.Value.fromStringArray(_allowedRoleNames),
        ethereum.Value.fromString(_POname),
      ],
    );

    return result[0].toAddress();
  }

  try_createDirectDemocracyToken(
    name: string,
    symbol: string,
    _nftMembership: Address,
    _allowedRoleNames: Array<string>,
    _POname: string,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createDirectDemocracyToken",
      "createDirectDemocracyToken(string,string,address,string[],string):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(_nftMembership),
        ethereum.Value.fromStringArray(_allowedRoleNames),
        ethereum.Value.fromString(_POname),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateDirectDemocracyTokenCall extends ethereum.Call {
  get inputs(): CreateDirectDemocracyTokenCall__Inputs {
    return new CreateDirectDemocracyTokenCall__Inputs(this);
  }

  get outputs(): CreateDirectDemocracyTokenCall__Outputs {
    return new CreateDirectDemocracyTokenCall__Outputs(this);
  }
}

export class CreateDirectDemocracyTokenCall__Inputs {
  _call: CreateDirectDemocracyTokenCall;

  constructor(call: CreateDirectDemocracyTokenCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _nftMembership(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _allowedRoleNames(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get _POname(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class CreateDirectDemocracyTokenCall__Outputs {
  _call: CreateDirectDemocracyTokenCall;

  constructor(call: CreateDirectDemocracyTokenCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
