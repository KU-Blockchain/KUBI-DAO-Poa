// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ContractCreated extends ethereum.Event {
  get params(): ContractCreated__Params {
    return new ContractCreated__Params(this);
  }
}

export class ContractCreated__Params {
  _event: ContractCreated;

  constructor(event: ContractCreated) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get memberTypeNames(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }

  get executiveRoleNames(): Array<string> {
    return this._event.parameters[2].value.toStringArray();
  }

  get defaultImageURL(): string {
    return this._event.parameters[3].value.toString();
  }

  get POname(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class NFTMembershipFactory extends ethereum.SmartContract {
  static bind(address: Address): NFTMembershipFactory {
    return new NFTMembershipFactory("NFTMembershipFactory", address);
  }

  deployedContracts(param0: BigInt): Address {
    let result = super.call(
      "deployedContracts",
      "deployedContracts(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_deployedContracts(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployedContracts",
      "deployedContracts(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDeployedContracts(): Array<Address> {
    let result = super.call(
      "getDeployedContracts",
      "getDeployedContracts():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getDeployedContracts(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getDeployedContracts",
      "getDeployedContracts():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class CreateNFTMembershipCall extends ethereum.Call {
  get inputs(): CreateNFTMembershipCall__Inputs {
    return new CreateNFTMembershipCall__Inputs(this);
  }

  get outputs(): CreateNFTMembershipCall__Outputs {
    return new CreateNFTMembershipCall__Outputs(this);
  }
}

export class CreateNFTMembershipCall__Inputs {
  _call: CreateNFTMembershipCall;

  constructor(call: CreateNFTMembershipCall) {
    this._call = call;
  }

  get memberTypeNames(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get _executiveRoleNames(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get _defaultImageURL(): string {
    return this._call.inputValues[2].value.toString();
  }

  get POname(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateNFTMembershipCall__Outputs {
  _call: CreateNFTMembershipCall;

  constructor(call: CreateNFTMembershipCall) {
    this._call = call;
  }
}
