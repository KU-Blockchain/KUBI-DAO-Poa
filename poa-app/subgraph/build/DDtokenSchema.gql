type DDTokenCreated @entity {
  id: ID!
  tokenAddress: Bytes!
  name: String!
  symbol: String!
  POname: String!
  allowedRoleNames: [DDAllowedRoleName!]! @derivedFrom(field: "tokenCreated")
}

type DDAllowedRoleName @entity {
  id: ID!
  roleName: String!
  tokenCreated: DDTokenCreated! @link
}

type DDToken @entity {
  id: ID!
  tokenAddress: Bytes!
  name: String!
  symbol: String!
  POname: String!
  mintEvents: [DDTokenMintEvent!]! @derivedFrom(field: "token")
}

type DDTokenMintEvent @entity {
  id: ID!
  token: DDToken! @link
  to: Bytes!
  amount: BigInt!
}

type NFTMembershipCreated @entity {
  id: ID!
  contractAddress: Bytes!
  memberTypeNames: [String!]!
  defaultImageURL: String!
  POname: String!
}

type NFTMembership @entity {
  id: ID!
  contract: NFTMembershipCreated! @link
  memberTypeNames: [String!]!
  defaultImageURL: String!
  mintEvents: [NFTMintEvent!]! @derivedFrom(field: "membership")
  changeTypeEvents: [NFTChangeTypeEvent!]! @derivedFrom(field: "membership")
}

type NFTMemberType @entity {
  id: ID!
  memberTypeName: String!
  imageURL: String!
  membership: NFTMembership! @link
}

type NFTMintEvent @entity {
  id: ID!
  membership: NFTMembership! @link
  recipient: Bytes!
  memberTypeName: String!
  tokenURI: String!
}

type NFTChangeTypeEvent @entity {
  id: ID!
  membership: NFTMembership! @link
  user: Bytes!
  newMemberType: String!
}


